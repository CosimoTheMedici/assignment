## Install

    $ git clone https://github.com/Timoolz/fincra-test.git
    $ cd fincra-test
    $ yarn

## Configure app

Open `fincra-test/.env` then edit it with your settings. You will need:

- MONGODB_URI;
  Mongo db connection string e.g mongodb://0.0.0.0:27017/DB_name

- PORT;
  Port for app to run on e.g 5050(any port of your choice)

- JWT_KEY;
  Key for signing Jwt access tokens e.g a2f9e52d88e1cffd67eb18a5cad0925a40bb8e40816b192ea138b708ea05b20589fbbdf1e47e26e18215becabef6727e543fb016cd6181f09ec6887088e2434c
## Running the project

Run the following commands

    $ npm build
    $ npm start

## Running the Unit Tests

Run the following commands

    $ npm test

## Project Structure

```
fincra-test
    |--seeds\               # Seed Data
    |--src\
        |--bin
            |--www
                |--index.ts             # App entry point
        |--config\              # App config
        |--controllers\         # Route controllers (controller layer)
        |--entities\            # Mongo Entities
        |--interfaces\          # App Interfaces (types)
        |--middlewares\         # Custom express middlewares
        |--repositories\        # Repositories( data layer)
        |--routes\              # routes
        |--seed-config\         # seed init and config
        |--services\            # service layer
        |--utils\               # utils
        |--validators\          # validators
        |--app.ts               # Express app
    |--test\                # testDirectory
```

## TEST CREDENTIALS

The following credentials can be used to test. These credentials are from seeded data;

- ADMIN
  `email: 'admin@fincra.com'; password: 'hashPassword'`

- AGENT
  `email: 'agent1@fincra.com'; password: 'password'`

- USER
  `email: 'user@fincra.com'; password: 'password'`

## REST API DOCUMENTATION

Once the application is up and running, you can call the endpoints.
The REST API to fincra support is described below.

### Health

#### Request

`GET /health/`

    curl --location 'localhost:5050/health/' \
    --header 'Content-Type: application/json' \
    --header 'Accept: application/json'


### Login

#### Request

`POST /auth/login/`

    curl --location 'localhost:5050/auth/login' \
    --header 'Content-Type: application/json' \
    --header 'Accept: application/json' \
    --data-raw \
      '{
        "email": "agent1@fincra.com",
        "password": "password"
      }'



### Signup

#### Request

`POST /auth/signup/`

    curl --location 'localhost:5050/auth/signup' \
    --header 'Content-Type: application/json' \
    --header 'Accept: application/json' \
    --data-raw ' \
    {
      "name": "adminUser1",
      "email": "admin@gmail.com",
      "password": "password"
    }'


### Create Ticket

This endpoint is an authenticated endpoint. \
It requires an access token with a role with the following user types.

- USER
    "start": "npm run build && node dist/src/bin/www/index.js",

#### Request

`POST /ticket/`

    curl --location 'localhost:5050/ticket' \
    --header 'Content-Type: application/json' \
    --header 'Accept: application/json' \
    --header 'Authorization: bearer your.bearer.token' \
    --data ' \
    {
      "title": "titleeoyaa",
      "description": "passwordpasswordpasswordpasswordpasswordpasswordpasswordpasswordpasswordpasswordpasswordpasswordpasswordpasswordpasswordpasswordpasswordpasswordpassword"
    }'


### Get All User Tickets

This endpoint is an authenticated endpoint. \
It requires an access token with a role with the following user types.

- USER

#### Request

`GET /ticket/`

    curl --location 'localhost:5050/ticket' \
    --header 'Content-Type: application/json' \
    --header 'Accept: application/json' \
    --header 'Authorization: bearer your.bearer.token'



### Comment on a ticket

This endpoint is an authenticated endpoint. \
It requires an access token with a role with the following user types.

- USER
- ADMIN
- AGENT

#### Request

`POST /ticket/comment/`

    curl --location 'localhost:5050/ticket/comment' \
    --header 'Content-Type: application/json' \
    --header 'Accept: application/json' \
    --header 'Authorization: bearer your.bearer.token' \
    --data ' \
    {
      "ticketId": "64d4edad3a5f9360f83f7b20",
      "content": "titttutuututututpasswordpasswordpasswordpasswordpasswordpasswordpasswordpasswordpasswordpasswordpasswordpasswordpasswordpasswordpasswordpasswordpasswordpasswordpassword"
    }'


### Get a Ticket by id

This endpoint is an authenticated endpoint. \
It requires an access token with a role with the following user types.

- USER
- ADMIN
- AGENT

#### Request

`GET /ticket/id/:id`

    curl --location 'localhost:5050/ticket/id/64d4e2df3dbdff12e8c801da' \
    --header 'Content-Type: application/json' \
    --header 'Accept: application/json' \
    --header 'Authorization: bearer your.bearer.token'



### Process a ticket

This endpoint is an authenticated endpoint. \
It requires an access token with a role with the following user types.

- AGENT

#### Request

`POST /ticket/process/:id`

    curl --location --request POST 'localhost:5050/ticket/process/64d4e2e63dbdff12e8c801dc' \
    --header 'Content-Type: application/json' \
    --header 'Accept: application/json' \
    --header 'Authorization: bearer your.bearer.token'



### Close a ticket

This endpoint is an authenticated endpoint. \
It requires an access token with a role with the following user types.

- ADMIN
- AGENT

#### Request

`GET /ticket/close/:id`

    curl --location --request POST 'localhost:5050/ticket/close/64d4e2e63dbdff12e8c801dc' \
    --header 'Content-Type: application/json' \
    --header 'Accept: application/json' \
    --header 'Authorization: bearer your.bearer.token'



### Get All Tickets

This endpoint is an authenticated endpoint. \
It requires an access token with a role with the following user types.

- ADMIN
- AGENT

#### Request

`GET /ticket/all/`

    curl --location 'localhost:5050/ticket/all' \
    --header 'Content-Type: application/json' \
    --header 'Accept: application/json' \
    --header 'Authorization: bearer your.bearer.token'


### Get Recently closed Tickets

This endpoint is an authenticated endpoint. \
It requires an access token with a role with the following user types.

- ADMIN
- AGENT

#### Request

`GET /ticket/recently-closed/`

    curl --location 'localhost:5050/ticket/recently-closed' \
    --header 'Content-Type: application/json' \
    --header 'Accept: application/json' \
    --header 'Authorization: bearer your.bearer.token'

#### Response



### Status Codes

Fincra support returns the following status codes in its API:

| Status Code | Description             |
| :---------- | :---------------------- |
| 200         | `OK`                    |
| 201         | `CREATED`               |
| 400         | `BAD REQUEST`           |
| 401         | `UNAUTHORIZED`          |
| 403         | `FORBIDDEN`             |
| 404         | `NOT FOUND`             |
| 409         | `CONFLICT`              |
| 500         | `INTERNAL SERVER ERROR` |

## IMPROVEMENTS

The following are list of possible improvements;

- JWT token generated should have an expiry date that renders it invalid

- Pagination should be implemented on the get multiple ticket calls
